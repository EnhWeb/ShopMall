<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebAPI</name>
    </assembly>
    <members>
        <member name="T:WebAPI.AOP.ShopMallCacheAOP">
            <summary>
            面向切面的缓存使用
            </summary>
        </member>
        <member name="T:WebAPI.AOP.ShopMallLogAOP">
            <summary>
            拦截器BlogLogAOP 继承IInterceptor接口
            </summary>
        </member>
        <member name="M:WebAPI.AOP.ShopMallLogAOP.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            实例化IInterceptor唯一方法 
            </summary>
            <param name="invocation">包含被拦截方法的信息</param>
        </member>
        <member name="T:WebAPI.AOP.ShopMallRedisCacheAOP">
            <summary>
            面向切面的缓存使用
            </summary>
        </member>
        <member name="M:WebAPI.AutoMapper.CustomProfile.#ctor">
            <summary>
            配置构造函数，用来创建关系映射
            </summary>
        </member>
        <member name="T:WebAPI.Controllers.LoginController">
            <summary>
            登录服务接口
            </summary>
        </member>
        <member name="T:WebAPI.Controllers.ValuesController">
            <summary>
            获取值得接口
            </summary>
        </member>
        <member name="M:WebAPI.Controllers.ValuesController.Get">
            <summary>
            获取登录信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.ValuesController.Get(System.Int32)">
            <summary>
            获取value
            </summary>
            <param name="id">返回值</param>
            <returns></returns>
        </member>
        <member name="M:WebAPI.Controllers.ValuesController.Post(System.String)">
            <summary>
             post方法体
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:WebAPI.Controllers.ValuesController.Put(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:WebAPI.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:WebAPI.FilterClass.GlobalExceptionsFilter">
            <summary>
            全局异常错误日志
            </summary>
        </member>
        <member name="M:WebAPI.FilterClass.GlobalExceptionsFilter.WriteLog(System.String,System.Exception)">
            <summary>
            自定义返回格式
            </summary>
            <param name="throwMsg"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="P:WebAPI.FilterClass.JsonErrorResponse.Message">
            <summary>
            生产环境的消息
            </summary>
        </member>
        <member name="P:WebAPI.FilterClass.JsonErrorResponse.DevelopmentMessage">
            <summary>
            开发环境的消息
            </summary>
        </member>
        <member name="T:WebAPI.FilterClass.GlobalRouteAuthorizeConvention">
            <summary>
            Summary:全局路由权限公约
            Remarks:目的是针对不同的路由，采用不同的授权过滤器
            如果 controller 上不加 [Authorize] 特性，默认都是 Permission 策略
            否则，如果想特例其他授权机制的话，需要在 controller 上带上  [Authorize]，然后再action上自定义授权即可，比如 [Authorize(Roles = "Admin")]
            </summary>
        </member>
        <member name="T:WebAPI.FilterClass.GlobalAuthorizeFilter">
            <summary>
            全局权限过滤器【无效】
            </summary>
        </member>
        <member name="T:WebAPI.Middlewares.RequRespLogMildd">
            <summary>
            中间件
            记录请求和响应数据
            </summary>
        </member>
        <member name="F:WebAPI.Middlewares.RequRespLogMildd._next">
            <summary>
            
            </summary>
        </member>
        <member name="M:WebAPI.Middlewares.RequRespLogMildd.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
        <member name="T:WebAPI.Startup">
            <summary>
            程序启动
            </summary>
        </member>
        <member name="F:WebAPI.Startup.CorsName">
            <summary>
            跨域自定义名
            </summary>
        </member>
        <member name="F:WebAPI.Startup.webapiName">
            <summary>
            接口名称
            </summary>
        </member>
        <member name="P:WebAPI.Startup.Configuration">
            <summary>
            定义配置
            </summary>
        </member>
        <member name="P:WebAPI.Startup.repository">
            <summary>
            log4net 仓储库
            </summary>
        </member>
        <member name="M:WebAPI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            启动类构造，方便初始化所需对象
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:WebAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注入服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WebAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            注入中间管道
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:WebAPI.SwaggerHelper.CustomApiVersion">
            <summary>
            自定义版本
            </summary>
        </member>
        <member name="T:WebAPI.SwaggerHelper.CustomApiVersion.ApiVersions">
            <summary>
            Api接口版本 自定义
            </summary>
        </member>
        <member name="F:WebAPI.SwaggerHelper.CustomApiVersion.ApiVersions.V1">
            <summary>
            V1 版本
            </summary>
        </member>
        <member name="F:WebAPI.SwaggerHelper.CustomApiVersion.ApiVersions.V2">
            <summary>
            V2 版本
            </summary>
        </member>
        <member name="T:WebAPI.SwaggerHelper.CustomRouteAttribute">
            <summary>
            自定义路由 /api/{version}/[controler]/[action]
            </summary>
        </member>
        <member name="P:WebAPI.SwaggerHelper.CustomRouteAttribute.GroupName">
            <summary>
            分组名称,是来实现接口 IApiDescriptionGroupNameProvider
            </summary>
        </member>
        <member name="M:WebAPI.SwaggerHelper.CustomRouteAttribute.#ctor(System.String)">
            <summary>
            自定义路由构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
        </member>
        <member name="M:WebAPI.SwaggerHelper.CustomRouteAttribute.#ctor(WebAPI.SwaggerHelper.CustomApiVersion.ApiVersions,System.String)">
            <summary>
            自定义版本+路由构造函数，继承基类路由
            </summary>
            <param name="actionName"></param>
            <param name="version"></param>
        </member>
    </members>
</doc>
